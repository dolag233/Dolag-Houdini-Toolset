import hou
import sys
import os
from os import environ as env
from error.error_report import displayError
from _utils.code_type import VexType, SnippetType


# check the code
def __checkCode(code, snippet_type=SnippetType.vex, vex_type=VexType.vfl):
    # @TODO not implement python and .h
    if snippet_type == SnippetType.python:
        return True

    # if contains keywords below, then legal
    if vex_type == VexType.vfl:
        essential_keywords = ("function ", "#define ")
        for keyword in essential_keywords:
            if keyword in code:
                return True

    elif vex_type == VexType.h:
        return True

    else:
        return False

    return False


# add vex comment string
def __getVexCommentStr(comment):
    # empty
    if len(comment) == 0:
        return ''

    # single line comment
    elif len(comment) < 65:
        return "// " + comment
    # multi line comment
    else:
        return "/*\n" + comment + "\n*/"


def __getPythonCommentStr(comment):
    # empty
    if len(comment) == 0:
        return ''

    # single line comment
    if len(comment) < 65:
        return "# " + comment
    # multi line comment
    else:
        return "{0}\n{1}\n{0}".format('\n', comment)


def saveVEXToDisk(vfl_name, code, comment, vex_type=VexType.vfl):
    # houdini has not been configured yet
    if "DOLAG_HOUDINI_PATH" not in env.keys():
        displayError("config")
        return

    # if code is not str
    if not isinstance(code, str):
        displayError("code")
        return

    dolag_home = env["DOLAG_HOUDINI_PATH"]
    suffix = 'vfl' if vex_type == VexType.vfl else 'h'
    custom_path = dolag_home + "\\vex\\custom"
    # deal with custom folder
    if not os.path.exists(custom_path) and not os.path.isdir(custom_path):
        # make dir with chmod 664
        if sys.version_info.major == 2:
            os.mkdir(custom_path, 436)

        elif sys.version_info.major == 3:
            os.mkdir(custom_path, 436)

    file_path = custom_path + "\\" + vfl_name + '.' + suffix
    comment = __getVexCommentStr(comment)

    # if file already exists, then just append
    if os.path.isfile(file_path):
        content = ""
        with open(file_path, "r+") as f:
            f.seek(0, 0)
            content = f.read()
            content = content.split("\n")

        with open(file_path, "w+") as f:
            # strip th "#endif" line
            stripped_content = []
            for line in content:
                # @TODO this will delete every line contains "#endif" even in a string
                if "#endif " not in line:
                    stripped_content.append(line)

            f.write('\n'.join(stripped_content))
            f.write('\n\n' + comment + '\n' + code)
            f.write("\n#endif _{0}_{1}_".format(vfl_name.upper(), suffix.upper()))
            f.flush()
            f.close()

    else:
        # new vfl file
        with open(file_path, "w+") as f:
            f.seek(0, 0)
            f.write("""/****************************************************************
*   This file is generated by Dolag Houdini Tool automatically
*   You can simply include this file and use it's function
*****************************************************************/

#ifndef _{0}_{1}_
#define _{0}_{1}_""".format(vfl_name.upper(), suffix.upper()))

            f.write('\n\n' + comment + '\n' + code)
            f.write("\n#endif _{0}_{1}_".format(vfl_name.upper(), suffix.upper()))
            f.flush()
            f.close()


def savePythonToDisk(py_name, code, comment):
    # houdini has not been configured yet
    if "DOLAG_HOUDINI_PATH" not in env.keys():
        displayError("config")
        return

    # if code is not str
    if not isinstance(code, str):
        displayError("code")
        return

    dolag_home = env["DOLAG_HOUDINI_PATH"]
    custom_path = dolag_home + "\\python\\custom"
    # deal with custom folder
    if not os.path.exists(custom_path) and not os.path.isdir(custom_path):
        # make dir with chmod 664
        if sys.version_info.major == 2:
            os.mkdir(custom_path, 436)

        elif sys.version_info.major == 3:
            os.mkdir(custom_path, 436)

    file_path = custom_path + "\\" + py_name + ".py"
    comment = __getPythonCommentStr(comment)

    # if file already exists, then just append
    if os.path.isfile(file_path):
        content = ""
        with open(file_path, "r+") as f:
            f.seek(0, 0)
            content = f.read()

        with open(file_path, "w+") as f:
            f.write(content)
            f.write('\n\n' + comment + '\n' + code)
            f.flush()
            f.close()

    else:
        # new python file
        with open(file_path, "w+") as f:
            f.seek(0, 0)
            f.write("""#coding=utf-8
'''
    ****************************************************************
    *   This file is generated by Dolag Houdini Tool automatically
    *   You can simply import this file and use it's function
    *****************************************************************
'''
    
import hou""")
            f.write('\n\n' + comment + '\n' + code)
            f.flush()
            f.close()
