<?xml version="1.0" encoding="UTF-8"?>
<!--
    Operator menu of Dolag tools
-->
<menuDocument>
    <!-- menuDocument can only contain 1 menu element, whose id is
         implicitly "root_menu"
      -->
    <menu>
        <subMenu id = "opmenu.dolag">
            <label>Dolag</label>
            <insertBefore>opmenu.flags_menu</insertBefore>
            <scriptItem id = "opmenu.dolag.dup_node_ref">
                <label>Duplicate Node As Reference</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

nodes = kwargs['items']

node_ref.dupNodeRef(nodes)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_ref">
                <label>Copy Node Parms Reference</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

node = kwargs['node']

node_ref.copyNodeRef(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_ref">
                <label>Paste Node Parms Reference</label>
                <expression>
import hou

tar = hou.ui.getTextFromClipboard()
tar = tar.split('\n')
if len(tar) == 0:
    return False

src_node = hou.node(tar[0])
if src_node is None:
    return False

# discard tar[0]
tar = tar[1:]
# if node types are not the same
if src_node.type() == kwargs["node"].type():
    return True
else:
    return False

                </expression>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

node = kwargs['node']

node_ref.pasteNodeRef(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.del_all_keyframes">
                <label>Delete Expression And Keys</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import del_keyframes

node = kwargs['node']

del_keyframes.delKeyframes(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <separatorItem id="opmenu.dolag.dolag.sep_0"/>

            <scriptItem id = "opmenu.dolag.copy_node_shape">
                <label>Copy Node Shape</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeShape(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_color">
                <label>Copy Node Color</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeColor(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_style">
                <label>Copy Node Style</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeStyle(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_shape">
                <label>Paste Node Shape</label>
                    <expression>
import hou

shape = hou.ui.getTextFromClipboard()
editor = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
if shape != '' and shape not in editor.nodeShapes():
    return False

return True

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeShape(node)
for node in hou.selectedNodes():
    node_style.pasteNodeShape(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_color">
                <label>Paste Node Color</label>
                    <expression>
import hou

color = hou.ui.getTextFromClipboard()
try:
    color = map(float, color.split(';'))
    if len(color) == 3:
        return True
except:
    pass

return False

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeColor(node)
for node in hou.selectedNodes():
    node_style.pasteNodeColor(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_style">
                <label>Paste Node Style</label>
                    <expression>
import hou

style = hou.ui.getTextFromClipboard()
try:
    shape, color = style.split('-')
    color = map(float, color.split(';'))
    if len(color) == 3:
        return True
except:
    pass

return False

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeStyle(node)
for node in hou.selectedNodes():
    node_style.pasteNodeStyle(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <separatorItem id="opmenu.dolag.dolag.sep_1"/>

            <scriptItem id = "opmenu.dolag.set_hda_alias">
                <label>Set Otl Alias</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import hda_alias, hda_alias_UI
from utils import show_UI

alias_wind = show_UI.showUI(hda_alias_UI.AliasWindow)
alias = alias_wind.getAlias()
node = kwargs['node']
hda_alias.setHdaAlias(node, alias)

                    ]]>
                    </scriptCode>
            </scriptItem>
        </subMenu>
    </menu>

</menuDocument>