<?xml version="1.0" encoding="UTF-8"?>
<!--
    Operator menu of Dolag tools
-->
<menuDocument>
    <!-- menuDocument can only contain 1 menu element, whose id is
         implicitly "root_menu"
      -->
    <menu>
        <subMenu id = "opmenu.dolag">
            <label>Dolag</label>
            <insertBefore>opmenu.flags_menu</insertBefore>
            <scriptItem id = "opmenu.dolag.copy_node_path">
                <label>Copy Node Path</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_path

node = kwargs['node']
node_path.copyNodePath(node)

                    ]]>
                    </scriptCode>
            </scriptItem>
            <separatorItem id="opmenu.sep.general"/>

            <scriptItem id = "opmenu.dolag.open_dependency_viewer">
                <label>Dependency Viewer</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_dependency_viewer

node = kwargs['node']
node_dependency_viewer.open_dependency_viewer(node)

                    ]]>
                    </scriptCode>
            </scriptItem>
            
            <scriptItem id = "opmenu.dolag.find_unlocked_nodes">
                <label>Find Unlocked Nodes</label>
                    <scriptCode><![CDATA[
import hou
from op_menu.unlocked_nodes_viewer import open_unlocked_nodes_viewer

open_unlocked_nodes_viewer()

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.unlock_nodes_recursively">
                <label>Unlocked Nodes Recursively</label>
                    <scriptCode><![CDATA[
import hou
from op_menu.unlock_node_recursively import unlockNodeRecursively

with hou.undos.group("Unlock Nodes Recursively"):
    nodes = kwargs['items']
    for node in nodes:
        unlockNodeRecursively(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <separatorItem id="opmenu.sep.viewers"/>
            
            <scriptItem id = "opmenu.dolag.dup_node_ref">
                <label>Duplicate Node As Reference</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

nodes = kwargs['items']

node_ref.dupNodeRef(nodes)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_ref">
                <label>Copy Node Parms Reference</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

node = kwargs['node']

node_ref.copyNodeRef(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_ref">
                <label>Paste Node Parms Reference</label>
                <expression>
import hou

tar = hou.ui.getTextFromClipboard()
tar = tar.split('\n')
if len(tar) == 0:
    return False

src_node = hou.node(tar[0])
if src_node is None:
    return False

# discard tar[0]
tar = tar[1:]
# if node types are not the same
if src_node.type() == kwargs["node"].type():
    return True
else:
    return False

                </expression>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_ref

node = kwargs['node']

node_ref.pasteNodeRef(node)

                    ]]>
                    </scriptCode>
            </scriptItem>
            <separatorItem id="opmenu.sep.refs"/>

            <scriptItem id = "opmenu.dolag.del_all_keyframes">
                <label>Delete Expression And Keys</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import del_keyframes

node = kwargs['node']

del_keyframes.delKeyframes(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_json">
                <label>Copy Node Metadata as Json to Clipboard</label>
                    <scriptCode><![CDATA[
from op_menu import node_parm_json

node = kwargs['node']

node_parm_json.copyNodeMetadataJson(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_parm_json">
                <label>Copy Parameter Value as Json to Clipboard</label>
                    <scriptCode><![CDATA[
from op_menu import node_parm_json

node = kwargs['node']

node_parm_json.copyParameterValueJson(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_parm_json">
                <label>Paste Parameter Value as Json From Clipboard</label>
                    <expression>
import hou
import json

clip = hou.ui.getTextFromClipboard()
try:
    clip = json.loads(clip)
except:
    return False

return True

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_parm_json

node = kwargs['node']

node_parm_json.pasteParameterValueFromJson(node)

                    ]]>
                    </scriptCode>
            </scriptItem>
            <separatorItem id="opmenu.sep.json"/>

            <separatorItem id="opmenu.dolag.dolag.sep_0"/>

            <scriptItem id = "opmenu.dolag.copy_node_shape">
                <label>Copy Node Shape</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeShape(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_color">
                <label>Copy Node Color</label>
                    <scriptCode><![CDATA[
import hou
import sys
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeColor(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.copy_node_style">
                <label>Copy Node Style</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']

node_style.copyNodeStyle(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_shape">
                <label>Paste Node Shape</label>
                    <expression>
import hou

shape = hou.ui.getTextFromClipboard()
editor = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
if shape != '' and shape not in editor.nodeShapes():
    return False

return True

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeShape(node)
for node in hou.selectedNodes():
    node_style.pasteNodeShape(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_color">
                <label>Paste Node Color</label>
                    <expression>
import hou

color = hou.ui.getTextFromClipboard()
try:
    color = list(map(float, color.split(';')))
    if len(color) == 3:
        return True
except:
    pass

return False

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeColor(node)
for node in hou.selectedNodes():
    node_style.pasteNodeColor(node)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.paste_node_style">
                <label>Paste Node Style</label>
                    <expression>
import hou

style = hou.ui.getTextFromClipboard()
try:
    shape, color = style.split('-')
    color = list(map(float, color.split(';')))
    if len(color) == 3:
        return True
except:
    pass

return False

                    </expression>
                    <scriptCode><![CDATA[
import hou
from op_menu import node_style

node = kwargs['node']
node_style.pasteNodeStyle(node)
for node in hou.selectedNodes():
    node_style.pasteNodeStyle(node)

                    ]]>
                    </scriptCode>
            </scriptItem>
            <separatorItem id="opmenu.sep.style.paste"/>

            <subMenu id = "opmenu.dolag.set_node_preset_style_menu">
                <label>Preset Style</label>
                <scriptItem id = "opmenu.set_node_preset_style_input">
                    <label>Input Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "input")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_output">
                    <label>Output Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "output")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_global">
                    <label>Global Control Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "global control")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_heavy">
                    <label>Heavy Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "heavy")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_important">
                    <label>Important Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "important")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_milestone">
                    <label>Milestone Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "milestone")

                        ]]>
                        </scriptCode>
                </scriptItem>

                <scriptItem id = "opmenu.set_node_preset_style_useless">
                    <label>Useless Node</label>
                        <scriptCode><![CDATA[
import hou
from op_menu import set_preset_style

node = kwargs['node']
set_preset_style.setNodePresetStyle(node, "useless")

                        ]]>
                        </scriptCode>
                </scriptItem>
            </subMenu>
            <separatorItem id="opmenu.sep.style.preset"/>

            <separatorItem id="opmenu.dolag.dolag.sep_1"/>

            <scriptItem id = "opmenu.dolag.set_hda_alias">
                <label>Set Otl Alias</label>
                    <scriptCode><![CDATA[
import hou
from op_menu import hda_alias, hda_alias_UI
from utils import show_UI

alias_wind = show_UI.showUI(hda_alias_UI.AliasWindow)
alias = alias_wind.getAlias()
node = kwargs['node']
hda_alias.setHdaAlias(node, alias)

                    ]]>
                    </scriptCode>
            </scriptItem>
            <separatorItem id="opmenu.sep.other"/>

            <separatorItem id="opmenu.dolag.dolag.sep_2"/>

            <scriptItem id = "opmenu.dolag.layout_nodes">
                <label>Layout Nodes</label>
                    <scriptCode><![CDATA[
import hou
from op_menu.node_layout import verticalSpacing

verticalSpacing(hou.selectedNodes(), True)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.layout_nodes_downward">
                <label>Layout Nodes Downward</label>
                    <scriptCode><![CDATA[
import hou
from op_menu.node_layout import verticalSpacing

verticalSpacing(hou.selectedNodes())

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.compress_node_space">
                <label>Compress Node Space</label>
                    <scriptCode><![CDATA[
from op_menu.node_layout import verticalCompressing
verticalCompressing(hou.selectedNodes(), True)

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.compress_node_space_upward">
                <label>Compress Node Space Downward</label>
                    <scriptCode><![CDATA[
from op_menu.node_layout import verticalCompressing
verticalCompressing(hou.selectedNodes())

                    ]]>
                    </scriptCode>
            </scriptItem>

            <scriptItem id = "opmenu.dolag.organize_wires">
                <label>Organize Wires</label>
                    <scriptCode><![CDATA[
from op_menu.wire_organize import wireHub, wireHubs
nodes = hou.selectedItems()
node = kwargs['node']
if len(nodes) == 0 and node:
    wireHub(node)

elif node not in nodes:
    wireHub(node)

elif node in nodes:
    wireHubs(nodes)

                    ]]>
                    </scriptCode>
            </scriptItem>
        </subMenu>
    </menu>

</menuDocument>